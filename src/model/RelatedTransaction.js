/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Direction from './Direction';
import NetworkIdentifier from './NetworkIdentifier';
import TransactionIdentifier from './TransactionIdentifier';

/**
 * The RelatedTransaction model module.
 * @module model/RelatedTransaction
 * @version 1.4.10
 */
class RelatedTransaction {
    /**
     * Constructs a new <code>RelatedTransaction</code>.
     * The related_transaction allows implementations to link together multiple transactions. An unpopulated network identifier indicates that the related transaction is on the same network.
     * @alias module:model/RelatedTransaction
     * @param transactionIdentifier {module:model/TransactionIdentifier} 
     * @param direction {module:model/Direction} 
     */
    constructor(transactionIdentifier, direction) { 
        
        RelatedTransaction.initialize(this, transactionIdentifier, direction);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, transactionIdentifier, direction) { 
        obj['transaction_identifier'] = transactionIdentifier;
        obj['direction'] = direction;
    }

    /**
     * Constructs a <code>RelatedTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RelatedTransaction} obj Optional instance to populate.
     * @return {module:model/RelatedTransaction} The populated <code>RelatedTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RelatedTransaction();

            if (data.hasOwnProperty('network_identifier')) {
                obj['network_identifier'] = NetworkIdentifier.constructFromObject(data['network_identifier']);
            }
            if (data.hasOwnProperty('transaction_identifier')) {
                obj['transaction_identifier'] = TransactionIdentifier.constructFromObject(data['transaction_identifier']);
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = Direction.constructFromObject(data['direction']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/NetworkIdentifier} network_identifier
 */
RelatedTransaction.prototype['network_identifier'] = undefined;

/**
 * @member {module:model/TransactionIdentifier} transaction_identifier
 */
RelatedTransaction.prototype['transaction_identifier'] = undefined;

/**
 * @member {module:model/Direction} direction
 */
RelatedTransaction.prototype['direction'] = undefined;






export default RelatedTransaction;

