/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CurveType from './CurveType';

/**
 * The PublicKey model module.
 * @module model/PublicKey
 * @version 1.4.10
 */
class PublicKey {
    /**
     * Constructs a new <code>PublicKey</code>.
     * PublicKey contains a public key byte array for a particular CurveType encoded in hex. Note that there is no PrivateKey struct as this is NEVER the concern of an implementation.
     * @alias module:model/PublicKey
     * @param hexBytes {String} Hex-encoded public key bytes in the format specified by the CurveType.
     * @param curveType {module:model/CurveType} 
     */
    constructor(hexBytes, curveType) { 
        
        PublicKey.initialize(this, hexBytes, curveType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, hexBytes, curveType) { 
        obj['hex_bytes'] = hexBytes;
        obj['curve_type'] = curveType;
    }

    /**
     * Constructs a <code>PublicKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PublicKey} obj Optional instance to populate.
     * @return {module:model/PublicKey} The populated <code>PublicKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PublicKey();

            if (data.hasOwnProperty('hex_bytes')) {
                obj['hex_bytes'] = ApiClient.convertToType(data['hex_bytes'], 'String');
            }
            if (data.hasOwnProperty('curve_type')) {
                obj['curve_type'] = CurveType.constructFromObject(data['curve_type']);
            }
        }
        return obj;
    }


}

/**
 * Hex-encoded public key bytes in the format specified by the CurveType.
 * @member {String} hex_bytes
 */
PublicKey.prototype['hex_bytes'] = undefined;

/**
 * @member {module:model/CurveType} curve_type
 */
PublicKey.prototype['curve_type'] = undefined;






export default PublicKey;

